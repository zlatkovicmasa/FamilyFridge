-- DROP SCHEMA IF EXISTS family_fridge CASCADE;
CREATE SCHEMA IF NOT EXISTS family_fridge;

-- DROP TABLE IF EXISTS family_fridge.users;
CREATE TABLE IF NOT EXISTS family_fridge.users (
                                           id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                           name VARCHAR(100) NOT NULL,
                                           email VARCHAR(100) NOT NULL UNIQUE,
                                           password VARCHAR(255) NOT NULL,
                                           role VARCHAR(50) NOT NULL,
                                           dietary_preferences VARCHAR(255),
                                           CONSTRAINT pk_users PRIMARY KEY (id)
);

INSERT INTO family_fridge.users (id, name, email, password, role, dietary_preferences) VALUES
                                               (1, 'test', 'test@email.com', 'testpassword', 'user', '');

-- DROP TABLE IF EXISTS family_fridge.groceries;
CREATE TABLE IF NOT EXISTS family_fridge.groceries(
                                        id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                        name VARCHAR(100) NOT NULL,
                                        CONSTRAINT pk_groceries PRIMARY KEY (id)
);

INSERT INTO family_fridge.groceries (id, name) VALUES
(1, 'Mleko'),
(2, 'Jaja'),
(3, 'Hleb'),
(4, 'Maslac'),
(5, 'Sir'),
(6, 'Pileća Prsa'),
(7, 'Paradajz'),
(8, 'Zelena Salata'),
(9, 'Jabuke'),
(10, 'Banane'),
(11, 'Krompir'),
(12, 'Šargarepe'),
(13, 'Luk'),
(14, 'Beli Luk'),
(15, 'So'),
(16, 'Biber'),
(17, 'Maslinovo Ulje'),
(18, 'Pirinč'),
(19, 'Pasta'),
(20, 'Brašno'),
(21, 'Govedina'),
(22, 'Svinjetina'),
(23, 'Riba'),
(24, 'Škampi'),
(25, 'Tofu'),
(26, 'Spanać'),
(27, 'Brokoli'),
(28, 'Karfiol'),
(29, 'Paprika'),
(30, 'Pečurke'),
(31, 'Tikvice'),
(32, 'Patlidžan'),
(33, 'Krastavac'),
(34, 'Boranja'),
(35, 'Grašak'),
(36, 'Kukuruz'),
(37, 'Avokado'),
(38, 'Jagode'),
(39, 'Borovnice'),
(40, 'Maline'),
(41, 'Grožđe'),
(42, 'Pomorandže'),
(43, 'Limuni'),
(44, 'Limete'),
(45, 'Ananas'),
(46, 'Mango'),
(47, 'Breskve'),
(48, 'Šljive'),
(49, 'Trešnje'),
(50, 'Kokos'),
(51, 'Bademi'),
(52, 'Orasi'),
(53, 'Kikiriki'),
(54, 'Indijski Orah'),
(55, 'Semenke Bundeve'),
(56, 'Suncokretove Semenke'),
(57, 'Prezle'),
(58, 'Kvasac'),
(59, 'Soda Bikarbone'),
(60, 'Prašak za Pecivo'),
(61, 'Šećer'),
(62, 'Smeđi Šećer'),
(63, 'Med'),
(64, 'Javorov Sirup'),
(65, 'Ekstrakt Vanile'),
(66, 'Cimet'),
(67, 'Muškatni Oraščić'),
(68, 'Đumbir'),
(69, 'Kurkuma'),
(70, 'Kumin'),
(71, 'Paprika'),
(72, 'Čili Prah'),
(73, 'Origano'),
(74, 'Bosiljak'),
(75, 'Timiijan'),
(76, 'Ruzmarin'),
(77, 'Peršun'),
(78, 'Mirođija'),
(79, 'Žalfija'),
(80, 'Nana'),
(81, 'Korisndonjer'),
(82, 'Lovorov List'),
(83, 'Kečap'),
(84, 'Senf'),
(85, 'Majonez'),
(86, 'Soja Sos'),
(87, 'Ljuti Sos'),
(88, 'Vuster Sos'),
(89, 'BBQ Sos'),
(90, 'Sirće'),
(91, 'Jabukovo Sirće'),
(92, 'Balzamičko Sirće'),
(93, 'Belo Vinsko Sirće'),
(94, 'Crveno Vinsko Sirće'),
(95, 'Masline'),
(96, 'Kiseli Krastavci'),
(97, 'Džem'),
(98, 'Pekmez'),
(99, 'Kikiriki Puter'),
(100, 'Badem Puter'),
(101, 'Humus'),
(102, 'Tahini'),
(103, 'Čokoladne Mrvice'),
(104, 'Kakao Prah'),
(105, 'Maršmelou'),
(106, 'Želatin'),
(107, 'Šlag'),
(108, 'Sladoled'),
(109, 'Zamrznuto Povrće'),
(110, 'Zamrznuto Voće'),
(111, 'Zamrznuta Pica'),
(112, 'Zamrznuti Obroci'),
(113, 'Žitarice'),
(114, 'Ovsena Kaša'),
(115, 'Granola'),
(116, 'Smesa za Palačinke'),
(117, 'Smesa za Vafle'),
(118, 'Sirup'),
(119, 'Čaj'),
(120, 'Kafa'),
(121, 'Sok'),
(122, 'Gazirani Sok'),
(123, 'Mlečne Alternative'),
(124, 'Maslac Alternative'),
(125, 'Jogurt'),
(126, 'Alternative Sira'),
(127, 'Proteinski Prah'),
(128, 'Sportski Napici'),
(129, 'Boce sa Vodom'),
(130, 'Gazirana Voda'),
(131, 'Pivo'),
(132, 'Vino'),
(133, 'Žestina'),
(134, 'Kokteli'),
(135, 'Energetski Napici'),
(136, 'Konzervisane Supe'),
(137, 'Konzervisano Povrće'),
(138, 'Konzervisano Voće'),
(139, 'Konzervisani Pasulj'),
(140, 'Konzervisani Tunjevina'),
(141, 'Konzervisano Pile'),
(142, 'Konzervisani Losos'),
(143, 'Suvi Pasulj'),
(144, 'Sočivo'),
(145, 'Leblebija'),
(146, 'Kinoa'),
(147, 'Kus-Kus'),
(148, 'Ječam'),
(149, 'Bulgur'),
(150, 'Proso'),
(151, 'Instant Nudle'),
(152, 'Makaroni'),
(153, 'Špageti'),
(154, 'Fetuccine'),
(155, 'Linguine'),
(156, 'Pene'),
(157, 'Rigatoni'),
(158, 'Rotini'),
(159, 'Školjke Pasta'),
(160, 'Lazanje'),
(161, 'Testo za Picu'),
(162, 'Tortilje'),
(163, 'Naan Hleb'),
(164, 'Pita Hleb'),
(165, 'Bejglovi'),
(166, 'Kroasani'),
(167, 'Mafini'),
(168, 'Krofne'),
(169, 'Skonse'),
(170, 'Kolačići'),
(171, 'Krekeri'),
(172, 'Čips'),
(173, 'Kokice'),
(174, 'Perece'),
(175, 'Pirinčani Kolačići'),
(176, 'Voćni Grickalice'),
(177, 'Granola Štapici'),
(178, 'Proteinski Štapici'),
(179, 'Džerki'),
(180, 'Orašasti Plodovi'),
(181, 'Trail Mix'),
(182, 'Sušeno Voće'),
(183, 'Instant Nudle'),
(184, 'Instant Krompir'),
(185, 'Kus-Kus Smesa'),
(186, 'Smesa za Punjenje'),
(187, 'Smesa za Gravy'),
(188, 'Supa Smesa'),
(189, 'Bujon'),
(190, 'Kocke za Bujon'),
(191, 'Paradajz Sos'),
(192, 'Paradajz Pire'),
(193, 'Pasta Sos'),
(194, 'Salsa'),
(195, 'Pesto'),
(196, 'Relish'),
(197, 'Ren'),
(198, 'Kapari'),
(199, 'Srca Artičoke'),
(200, 'Srca Palmi');

-- DROP TABLE IF EXISTS family_fridge.meals;
CREATE TABLE IF NOT EXISTS family_fridge.meals(
                                           id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                           name VARCHAR(100) NOT NULL,
                                           approved BOOLEAN DEFAULT FALSE,
                                           suggested_by INT,
                                           CONSTRAINT pk_meals PRIMARY KEY (id),
                                           CONSTRAINT fk_meals_suggested_by FOREIGN KEY (suggested_by) REFERENCES family_fridge.users (id)
);
--
-- DROP TABLE IF EXISTS family_fridge.meal_ingredients;
CREATE TABLE IF NOT EXISTS family_fridge.meal_ingredients(
                                            id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                            meal_id INT NOT NULL,
                                            grocery_id INT NOT NULL,
                                            quantity DECIMAL(10,2) NOT NULL,
                                            CONSTRAINT pk_meal_ingredients PRIMARY KEY (id),
                                            CONSTRAINT fk_meal_ingredients_meal FOREIGN KEY (meal_id) REFERENCES family_fridge.meals (id),
                                            CONSTRAINT fk_meal_ingredients_grocery FOREIGN KEY (grocery_id) REFERENCES family_fridge.groceries (id)
);

-- DROP TABLE IF EXISTS family_fridge.time_of_day;
CREATE TABLE IF NOT EXISTS family_fridge.time_of_day(
                                        id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                        name VARCHAR(100) NOT NULL,
                                        CONSTRAINT pk_time_of_day PRIMARY KEY (id)
);

INSERT INTO family_fridge.time_of_day (id, name) VALUES
                                                     (1, 'doručak'),
                                                     (2, 'užina'),
                                                     (3, 'ručak'),
                                                     (4, 'večera');

-- DROP TABLE IF EXISTS family_fridge.meal_plans;
CREATE TABLE IF NOT EXISTS family_fridge.meal_plans(
                                                id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                                date DATE NOT NULL,
                                                time_of_day_id INT NOT NULL,
                                                meal_id INT NOT NULL,
                                                CONSTRAINT pk_meal_plans PRIMARY KEY (id),
                                                CONSTRAINT fk_meal_plans_time_of_day FOREIGN KEY (time_of_day_id) REFERENCES family_fridge.time_of_day (id),
                                                CONSTRAINT fk_meal_plans_meal_id FOREIGN KEY (meal_id) REFERENCES family_fridge.meals (id)
);

-- DROP TABLE IF EXISTS family_fridge.inventory;
CREATE TABLE IF NOT EXISTS family_fridge.inventory(
                                               id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                               grocery_id INT NOT NULL,
                                               quantity DECIMAL(10,2) NOT NULL,
                                               CONSTRAINT pk_inventory PRIMARY KEY (id),
                                               CONSTRAINT fk_inventory_grocery_id FOREIGN KEY (grocery_id) REFERENCES family_fridge.groceries (id)
);
